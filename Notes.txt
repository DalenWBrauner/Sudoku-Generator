Okay, so it works. But I don't like it.
Maybe I'm just one of those guys that wants to keep adding and adding and adding and adding and adding
until it's something way out of control, but I'd like to think I just
want to improve puzzle quality and usability, and maybe even do a
little quality control; make the program run more efficiently. It's
pretty ugly where it stands now, I would think. After all, I DID just
implement the first solution to each problem I thought of, and either
tweaked them until they worked or go with a second solution.
CURRENT INTENDED FILE LAYOUT:
FINISHED:
	Puzzle.py
		Holds a functional Sudoku object.
	Answer_Generator.py
		Generates answer keys to Sudoku puzzles.
		def Column_Shuffler(puzzle)
			def Shuffle_Columns(puzzle,listOfColumns)
		def Nine_Factorial()
	Answer_Unsolver.py
IN PROGRESS:	
	???
THE FUTURE:	
	GUI.py
		will be any and all gui interface, I guess
	Playable.py
		will be the part of the project that goes to making this a playable game

NEXT IMMEDIATE ASSIGNMENT:
???

	
FUN FACT:
The sudoku puzzle generation process is as follows:
	Start with a very specific sample puzzle
		Current number of possible puzzles: 1
	Scramble the following list: [1,2,3,4,5,6,7,8,9]
	So you get something like:   [3,1,7,4,6,9,8,2,5]
	Replace all 1s in the specific sample puzzle with 3s.
	Replace all 2s in the specific sample puzzle with 1s.
	Replace all 3s in the specific sample puzzle with 7s. etc.
		Number of possible replacement lists:
		9! = 9*8*7*6*5*4*3*2*1 = 362,880
		Current number of possible puzzles: 362,880
	Shuffle the columns of the puzzle s.t. the puzzle is still valid.
		Number of possible results from shuffling:
		6 different outcomes from shuffling the first 3 columns.
		6 different outcomes from shuffling the second 3 columns.
		6 different outcomes from shuffling the third 3 columns.
		6 different outcomes from shuffling the 3 triplets of columns.
		6^4 = 6*6*6*6 = 1296
		9! * 6^4 = 470,292,480
		Final number of possible puzzles: 470,292,480